
#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

events {
    worker_connections  512;
}

env HOME;
env LOGNAME;

http {
    include       mime.types;
    default_type  application/octet-stream;

    lua_code_cache off;
    lua_package_path ";;$prefix/../../emuyoda/lua/?.lua;";
    lua_package_cpath ";;$prefix/../../emuyoda/lua/?.so;";

    sendfile        on;

    keepalive_timeout  65;

    gzip  off;

    lua_shared_dict status_dict 2M;
    lua_shared_dict session_dict 1M;

    init_by_lua_block {
        local router = require "router"
    }

    server {
        listen       44480;
        server_name  localhost;

        location /zonama-instance-id { alias /var/lib/dbus/machine-id; }

        location / {
            root   ../../emuyoda/html;
            index  index.html index.htm;
        }

        location /api {
	    lua_socket_log_errors off;
	    lua_check_client_abort on;
            content_by_lua '
                local router = require "router"
                router.process_request()
            ';
        }
    }

    ################
    # HTTPS server #
    ################
    server {
        listen       44443 ssl;
        server_name  localhost;

        ssl_certificate      self-signed-ssl.crt;
        ssl_certificate_key  self-signed-ssl.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location /zonama-instance-id { alias /var/lib/dbus/machine-id; }

        location / {
            root   ../../emuyoda/html;
            index  index.html index.htm;
        }

        location /api {
	    lua_socket_log_errors off;
	    lua_check_client_abort on;
            content_by_lua '
                local router = require "router"
                router.process_request()
            ';
        }
    }
}
