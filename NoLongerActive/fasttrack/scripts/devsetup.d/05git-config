#!/bin/bash
#
# 05git-setup - Setup git global config
#
# Author: Lord Kator <lordkator@swgemu.com>
#
# Created: Sat Dec 26 18:09:46 EST 2015
#

setup_gitconfig() {
    local email_address=$(git config --get user.email)

    if [ -z "$email_address" ]; then
      rm -f ~/.gitconfig
    fi

    # Start with basic stuff, git setup:
    if [ ! -f ~/.gitconfig ]; then
      while [ ! -f ~/.gitconfig ]
      do
        local r=$(zenity --forms \
	  --separator='/' \
	  --title "Git Setup" \
	  --text="We need to setup git for your commits\nThese settings will show up when you commit to Gerrit,\nthey should be useful to the real world\n" \
	  --add-entry="Display Name for git (i.e. Elmer Fudd)" \
	  --add-entry="Email for git (i.e. elmerfudd@example.com)"
        )

	msg "Response=[$r]"

	if [ -z "$r" -o "$r" = "/" ]; then
	    if zenity --question  --text="Are you sure you want to continue without setting up git?"; then
		error "Git must be configured before you can continue, you will need to logout or reboot to continue setup." 105
	    else
	        continue
	    fi
	fi

	local new_username=$(echo $r | cut -d'/' -f1)
	local new_email=$(echo $r | cut -d'/' -f2)

	msg "username=[$new_username] email=[$new_email]"

	# Validate the email
	local domain=$(echo $new_email | cut -d'@' -f2)
	if [ -z "$domain" ]; then
	  zenity --error --title "Invalid email" --text="Invaild email address format [$new_email]."

	  if zenity --question --title "Invalid Email, Quit Setup?" --text="Do you want to continue without setting up git?"; then
	      msg "User aborted git setup"
	      return
	  fi
	else
	  if host -t MX "$domain" > /dev/null 2>&1; then
	    :
	  else
	    zenity --error --title "Invalid email" --text="Invaild email address [$new_email]\n\nWe could not validate domain [$domain] via the internet."
	    continue
	  fi
	fi

	if zenity --question --title "Set Git Info" --text "Set your git user info to the following?\n\n Name: $new_username\n Email: $new_email"; then
	  git config --global user.name "$new_username"
	  git config --global user.email "$new_email"
	  if [ -f ~/.ssh/id_rsa ]; then
	    msg "Kill old ssh key (just in case)"
	    rm -vf ~/.ssh/id_rsa*
	  fi
	  notice 'Git Settings Updated' 'Your git settings have been updated.'
	  break
	fi
      done
    fi

    git config --list | grep 'user.' | while read f
    do
      echo "git $f"
    done
    step_complete 0 "username=$new_username"
}

if step_not_complete; then
    setup_gitconfig
fi

return 0
